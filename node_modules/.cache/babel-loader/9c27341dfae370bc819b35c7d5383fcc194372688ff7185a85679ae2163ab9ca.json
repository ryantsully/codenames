{"ast":null,"code":"var _jsxFileName = \"/Users/ryansullivan/Desktop/lab/src/pages/BlogList.jsx\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BlogList = _ref => {\n  let {\n    blogs,\n    title\n  } = _ref;\n  // Calculate the number of columns based on the number of blogs\n  const numColumns = Math.ceil(blogs.length / 2);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"blog-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid\",\n      children: Array.from(Array(numColumns).keys()).map(colIndex => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"column\",\n        children: blogs.slice(colIndex * 2, colIndex * 2 + 2) // Get two blogs for each column\n        .map(blog => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"blog-preview\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: `/blogs/${blog.id}`,\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: blog.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 18,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Written by \", blog.author]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 19,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 19\n          }, this)\n        }, blog.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 17\n        }, this))\n      }, colIndex, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n};\n_c = BlogList;\nexport default BlogList;\nvar _c;\n$RefreshReg$(_c, \"BlogList\");","map":{"version":3,"names":["Link","jsxDEV","_jsxDEV","BlogList","_ref","blogs","title","numColumns","Math","ceil","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Array","from","keys","map","colIndex","slice","blog","to","id","author","_c","$RefreshReg$"],"sources":["/Users/ryansullivan/Desktop/lab/src/pages/BlogList.jsx"],"sourcesContent":["import { Link } from \"react-router-dom\";\n\nconst BlogList = ({ blogs, title }) => {\n  // Calculate the number of columns based on the number of blogs\n  const numColumns = Math.ceil(blogs.length / 2);\n\n  return (\n    <div className=\"blog-list\">\n      <h2>{title}</h2>\n      <div className=\"grid\">\n        {Array.from(Array(numColumns).keys()).map((colIndex) => (\n          <div className=\"column\" key={colIndex}>\n            {blogs\n              .slice(colIndex * 2, colIndex * 2 + 2) // Get two blogs for each column\n              .map((blog) => (\n                <div className=\"blog-preview\" key={blog.id}>\n                  <Link to={`/blogs/${blog.id}`}>\n                    <h2>{blog.title}</h2>\n                    <p>Written by {blog.author}</p>\n                  </Link>\n                </div>\n              ))}\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default BlogList;\n"],"mappings":";AAAA,SAASA,IAAI,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,QAAQ,GAAGC,IAAA,IAAsB;EAAA,IAArB;IAAEC,KAAK;IAAEC;EAAM,CAAC,GAAAF,IAAA;EAChC;EACA,MAAMG,UAAU,GAAGC,IAAI,CAACC,IAAI,CAACJ,KAAK,CAACK,MAAM,GAAG,CAAC,CAAC;EAE9C,oBACER,OAAA;IAAKS,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBV,OAAA;MAAAU,QAAA,EAAKN;IAAK;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAM,eAChBd,OAAA;MAAKS,SAAS,EAAC,MAAM;MAAAC,QAAA,EAClBK,KAAK,CAACC,IAAI,CAACD,KAAK,CAACV,UAAU,CAAC,CAACY,IAAI,EAAE,CAAC,CAACC,GAAG,CAAEC,QAAQ,iBACjDnB,OAAA;QAAKS,SAAS,EAAC,QAAQ;QAAAC,QAAA,EACpBP,KAAK,CACHiB,KAAK,CAACD,QAAQ,GAAG,CAAC,EAAEA,QAAQ,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;QAAA,CACtCD,GAAG,CAAEG,IAAI,iBACRrB,OAAA;UAAKS,SAAS,EAAC,cAAc;UAAAC,QAAA,eAC3BV,OAAA,CAACF,IAAI;YAACwB,EAAE,EAAG,UAASD,IAAI,CAACE,EAAG,EAAE;YAAAb,QAAA,gBAC5BV,OAAA;cAAAU,QAAA,EAAKW,IAAI,CAACjB;YAAK;cAAAO,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QAAM,eACrBd,OAAA;cAAAU,QAAA,GAAG,aAAW,EAACW,IAAI,CAACG,MAAM;YAAA;cAAAb,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QAAK;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA;QAC1B,GAJ0BO,IAAI,CAACE,EAAE;UAAAZ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAM3C;MAAC,GAVuBK,QAAQ;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAYtC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACE;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACF;AAEV,CAAC;AAACW,EAAA,GAzBIxB,QAAQ;AA2Bd,eAAeA,QAAQ;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}