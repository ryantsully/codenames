{"ast":null,"code":"var _jsxFileName = \"/Users/ryansullivan/Desktop/ryans_workshop/src/pages/Wordle.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport '../index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Wordle = () => {\n  _s();\n  const [guessWord, setGuessWord] = useState('');\n  const newWordleGame = () => {\n    console.log(\"Create New Wordle Game!\");\n  };\n  function saveWordCharacters() {\n    if (guessWord.length !== 5) {\n      console.log(\"Guess Word:\", guessWord);\n      console.log(\"Word must be exactly 5 characters long.\");\n      return;\n    }\n    var characters = {};\n    for (var i = 0; i < guessWord.length; i++) {\n      var character = guessWord.charAt(i);\n      characters[i] = character;\n    }\n    console.log(\"Guess Word:\", guessWord);\n    console.log(characters);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wordle\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Wordle\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cells\",\n      children: guessWord.split('').map((character, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cell\",\n        children: character\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: saveWordCharacters,\n        children: \"Guess\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: newWordleGame,\n        children: \"New Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n_s(Wordle, \"/SKEzgCdbpXkONS+v+u+pO9PoiA=\");\n_c = Wordle;\nexport default Wordle;\nvar _c;\n$RefreshReg$(_c, \"Wordle\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Wordle","_s","guessWord","setGuessWord","newWordleGame","console","log","saveWordCharacters","length","characters","i","character","charAt","className","children","fileName","_jsxFileName","lineNumber","columnNumber","split","map","index","onClick","_c","$RefreshReg$"],"sources":["/Users/ryansullivan/Desktop/ryans_workshop/src/pages/Wordle.jsx"],"sourcesContent":["\n\n\nimport React, { useState } from 'react';\nimport '../index.css';\n\nconst Wordle = () => {\n    const [guessWord, setGuessWord] = useState('');\n\n    const newWordleGame = () => {\n        console.log(\"Create New Wordle Game!\")\n    }\n\n    function saveWordCharacters() {\n        if (guessWord.length !== 5) {\n            console.log(\"Guess Word:\", guessWord);\n            console.log(\"Word must be exactly 5 characters long.\");\n            return;\n        }\n        var characters = {};\n        for (var i = 0; i < guessWord.length; i++) {\n            var character = guessWord.charAt(i);\n            characters[i] = character;\n        }\n        console.log(\"Guess Word:\", guessWord);\n        console.log(characters);\n    }\n\n    return (\n        <div className=\"wordle\">\n            <h1>Wordle</h1>\n\n            <div className='cells'>\n                {guessWord.split('').map((character, index) => (\n                    <div key={index} className='cell'>\n                        {character}\n                    </div>\n                ))}\n            </div>\n\n            <div className='button'>\n                <button onClick={saveWordCharacters}>Guess</button>\n                <button onClick={newWordleGame}>New Game</button>\n            </div>\n        </div>\n    );\n};\n\nexport default Wordle;"],"mappings":";;AAGA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtB,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAE9C,MAAMO,aAAa,GAAGA,CAAA,KAAM;IACxBC,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAC;EAC1C,CAAC;EAED,SAASC,kBAAkBA,CAAA,EAAG;IAC1B,IAAIL,SAAS,CAACM,MAAM,KAAK,CAAC,EAAE;MACxBH,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEJ,SAAS,CAAC;MACrCG,OAAO,CAACC,GAAG,CAAC,yCAAyC,CAAC;MACtD;IACJ;IACA,IAAIG,UAAU,GAAG,CAAC,CAAC;IACnB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGR,SAAS,CAACM,MAAM,EAAEE,CAAC,EAAE,EAAE;MACvC,IAAIC,SAAS,GAAGT,SAAS,CAACU,MAAM,CAACF,CAAC,CAAC;MACnCD,UAAU,CAACC,CAAC,CAAC,GAAGC,SAAS;IAC7B;IACAN,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEJ,SAAS,CAAC;IACrCG,OAAO,CAACC,GAAG,CAACG,UAAU,CAAC;EAC3B;EAEA,oBACIV,OAAA;IAAKc,SAAS,EAAC,QAAQ;IAAAC,QAAA,gBACnBf,OAAA;MAAAe,QAAA,EAAI;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eAEfnB,OAAA;MAAKc,SAAS,EAAC,OAAO;MAAAC,QAAA,EACjBZ,SAAS,CAACiB,KAAK,CAAC,EAAE,CAAC,CAACC,GAAG,CAAC,CAACT,SAAS,EAAEU,KAAK,kBACtCtB,OAAA;QAAiBc,SAAS,EAAC,MAAM;QAAAC,QAAA,EAC5BH;MAAS,GADJU,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAGlB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACA,eAENnB,OAAA;MAAKc,SAAS,EAAC,QAAQ;MAAAC,QAAA,gBACnBf,OAAA;QAAQuB,OAAO,EAAEf,kBAAmB;QAAAO,QAAA,EAAC;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS,eACnDnB,OAAA;QAAQuB,OAAO,EAAElB,aAAc;QAAAU,QAAA,EAAC;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAC/C;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACJ;AAEd,CAAC;AAACjB,EAAA,CAxCID,MAAM;AAAAuB,EAAA,GAANvB,MAAM;AA0CZ,eAAeA,MAAM;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}