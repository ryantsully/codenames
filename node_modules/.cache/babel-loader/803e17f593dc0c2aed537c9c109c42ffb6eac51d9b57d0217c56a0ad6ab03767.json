{"ast":null,"code":"var _jsxFileName = \"/Users/ryansullivan/Desktop/lab/src/pages/CodeNames.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport '../index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CodeNames = () => {\n  _s();\n  const [wordColorMapping, setWordColorMapping] = useState([]);\n  useEffect(() => {\n    fetchWordColorMapping();\n  }, []);\n  const fetchWordColorMapping = async () => {\n    try {\n      const response = await fetch('http://127.0.0.1:5000/start_codenames_game');\n      const data = await response.json();\n      console.log('Response:', data);\n      const wordColorMappingArray = Object.entries(data).map(_ref => {\n        let [word, color] = _ref;\n        return {\n          word,\n          color\n        };\n      });\n      setWordColorMapping(wordColorMappingArray);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  const renderGrid = () => {\n    if (wordColorMapping.length !== 25) {\n      return null;\n    }\n    const grid = [];\n    let rowIndex = 0;\n    for (let i = 0; i < 25; i += 5) {\n      const row = [];\n      for (let j = i; j < i + 5; j++) {\n        const {\n          word,\n          color\n        } = wordColorMapping[j];\n        row.push( /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `box ${color}`,\n          children: word\n        }, j, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this));\n      }\n      grid.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid-row\",\n        children: row\n      }, rowIndex, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this));\n      rowIndex++;\n    }\n    return grid;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"codenames\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Code Names\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"body\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid\",\n        children: renderGrid()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchWordColorMapping,\n      children: \"New Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Spymaster Mode\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_s(CodeNames, \"SWN1jV/uSiMvkEbCD9j4FyaySto=\");\n_c = CodeNames;\nexport default CodeNames;\nvar _c;\n$RefreshReg$(_c, \"CodeNames\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","CodeNames","_s","wordColorMapping","setWordColorMapping","fetchWordColorMapping","response","fetch","data","json","console","log","wordColorMappingArray","Object","entries","map","_ref","word","color","error","renderGrid","length","grid","rowIndex","i","row","j","push","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/ryansullivan/Desktop/lab/src/pages/CodeNames.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport '../index.css';\n\nconst CodeNames = () => {\n  const [wordColorMapping, setWordColorMapping] = useState([]);\n\n  useEffect(() => {\n    fetchWordColorMapping();\n  }, []);\n\nconst fetchWordColorMapping = async () => {\n  try {\n    const response = await fetch('http://127.0.0.1:5000/start_codenames_game');\n    const data = await response.json();\n    console.log('Response:', data);\n    \n    const wordColorMappingArray = Object.entries(data).map(([word, color]) => ({ word, color }));\n    setWordColorMapping(wordColorMappingArray);\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nconst renderGrid = () => {\n    if (wordColorMapping.length !== 25) {\n      return null;\n    }\n  \n    const grid = [];\n    let rowIndex = 0;\n  \n    for (let i = 0; i < 25; i += 5) {\n      const row = [];\n  \n      for (let j = i; j < i + 5; j++) {\n        const { word, color } = wordColorMapping[j];\n  \n        row.push(\n          <div key={j} className={`box ${color}`}>\n            {word}\n          </div>\n        );\n      }\n  \n      grid.push(\n        <div key={rowIndex} className=\"grid-row\">\n          {row}\n        </div>\n      );\n  \n      rowIndex++;\n    }\n  \n    return grid;\n  };\n\n  return (\n    <div className=\"codenames\">\n      <h1>Code Names</h1>\n\n        <body>\n      <div className=\"grid\">\n        {renderGrid()}\n      </div>\n      </body>\n\n      <button onClick={fetchWordColorMapping}>New Game</button>\n      <button>Spymaster Mode</button>\n    </div>\n  );\n};\n\nexport default CodeNames;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}