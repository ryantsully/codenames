{"ast":null,"code":"var _jsxFileName = \"/Users/ryansullivan/Desktop/lab/src/pages/CodeNames.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CodeNames() {\n  _s();\n  const [gameWords, setGameWords] = useState([]);\n  useEffect(() => {\n    fetchGameWords();\n  }, []);\n  const fetchGameWords = async () => {\n    try {\n      const response = await fetch(\"/start_codenames_game\");\n      const data = await response.json();\n      setGameWords(data);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"grid\",\n    children: gameWords.map((word, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `box ${gameWords[word]}`,\n      children: word\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n_s(CodeNames, \"s9ZypwUPhtKfKHO15AYgFWqLNs0=\");\n_c = CodeNames;\nReactDOM.render( /*#__PURE__*/_jsxDEV(CodeNames, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 33,\n  columnNumber: 17\n}, this), document.getElementById(\"root\"));\nvar _c;\n$RefreshReg$(_c, \"CodeNames\");","map":{"version":3,"names":["React","useState","useEffect","ReactDOM","jsxDEV","_jsxDEV","CodeNames","_s","gameWords","setGameWords","fetchGameWords","response","fetch","data","json","error","console","className","children","map","word","index","fileName","_jsxFileName","lineNumber","columnNumber","_c","render","document","getElementById","$RefreshReg$"],"sources":["/Users/ryansullivan/Desktop/lab/src/pages/CodeNames.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\n\nfunction CodeNames() {\n  const [gameWords, setGameWords] = useState([]);\n\n  useEffect(() => {\n    fetchGameWords();\n  }, []);\n\n  const fetchGameWords = async () => {\n    try {\n      const response = await fetch(\"/start_codenames_game\");\n      const data = await response.json();\n      setGameWords(data);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return (\n    <div className=\"grid\">\n      {gameWords.map((word, index) => (\n        <div key={index} className={`box ${gameWords[word]}`}>\n          {word}\n        </div>\n      ))}\n    </div>\n  );\n}\n\nReactDOM.render(<CodeNames />, document.getElementById(\"root\"));"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,QAAQ,MAAM,WAAW;AAChC,OAAO,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErB,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAE9CC,SAAS,CAAC,MAAM;IACdQ,cAAc,EAAE;EAClB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,cAAc,GAAG,MAAAA,CAAA,KAAY;IACjC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,uBAAuB,CAAC;MACrD,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,EAAE;MAClCL,YAAY,CAACI,IAAI,CAAC;IACpB,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACtB;EACF,CAAC;EAED,oBACEV,OAAA;IAAKY,SAAS,EAAC,MAAM;IAAAC,QAAA,EAClBV,SAAS,CAACW,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACzBhB,OAAA;MAAiBY,SAAS,EAAG,OAAMT,SAAS,CAACY,IAAI,CAAE,EAAE;MAAAF,QAAA,EAClDE;IAAI,GADGC,KAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAGhB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACE;AAEV;AAAClB,EAAA,CA1BQD,SAAS;AAAAoB,EAAA,GAATpB,SAAS;AA4BlBH,QAAQ,CAACwB,MAAM,eAACtB,OAAA,CAACC,SAAS;EAAAgB,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,QAAG,EAAEG,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC;AAAC,IAAAH,EAAA;AAAAI,YAAA,CAAAJ,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}