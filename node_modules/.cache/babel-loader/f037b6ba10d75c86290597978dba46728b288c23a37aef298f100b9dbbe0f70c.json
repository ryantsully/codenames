{"ast":null,"code":"var _jsxFileName = \"/Users/ryansullivan/Desktop/lab/src/pages/Home.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport BlogList from './BlogList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const [blogs, setBlogs] = useState(null);\n  const [isPending, setIsPending] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Runs first part on render. Then watches \"name\" and only runs the function if it's changed\n  useEffect(() => {\n    // We fetch the data\n    fetch('http://localhost:8000/blogs').then(res => {\n      //Response object\n      console.log(res);\n      if (!res.ok) {\n        throw Error('could not fetch the data');\n      }\n      return res.json();\n    }).then(data => {\n      // getting the data\n      console.log(data);\n      setBlogs(data);\n      setIsPending(false);\n    })\n    // this catches any network error and fires a function\n    .catch(err => {\n      setError(err.message);\n    });\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home\",\n    children: [error && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 16\n    }, this), isPending && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 20\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Home\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }, this), blogs && /*#__PURE__*/_jsxDEV(BlogList, {\n      blogs: blogs,\n      title: \"all blogs!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 15\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"044DnhhJhXRCTMVm5Z8RUcohJYM=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["useState","useEffect","BlogList","jsxDEV","_jsxDEV","Home","_s","blogs","setBlogs","isPending","setIsPending","error","setError","fetch","then","res","console","log","ok","Error","json","data","catch","err","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","title","_c","$RefreshReg$"],"sources":["/Users/ryansullivan/Desktop/lab/src/pages/Home.jsx"],"sourcesContent":["\nimport { useState, useEffect } from 'react'\nimport BlogList from './BlogList'\n\nconst Home = () => {\n    const [blogs, setBlogs] = useState(null);\n    const [isPending, setIsPending] = useState(true);\n    const [error, setError] = useState(null)\n\n    // Runs first part on render. Then watches \"name\" and only runs the function if it's changed\n     useEffect(() => {\n        // We fetch the data\n        fetch('http://localhost:8000/blogs')\n            .then(res => {\n                //Response object\n                console.log(res)\n                if (!res.ok) {\n                    throw Error('could not fetch the data')\n                }\n                return res.json()\n            })\n            .then(data => {\n                // getting the data\n                console.log(data);\n                setBlogs(data)\n                setIsPending(false)\n            })\n            // this catches any network error and fires a function\n            .catch(err => {\n                setError(err.message)\n            });\n    });\n\n    return (\n    <div className=\"home\">\n    { error && <div>{ error }</div>}\n    { isPending && <div>Loading...</div>}\n    <h1>Home</h1>    \n    {/* This blogs && says validate the left before the right. So, it does not output the second part unless the left part = true */}\n    {blogs && <BlogList blogs={blogs} title=\"all blogs!\"/>}\n\n    {/* // <BlogList blogs={blogs.filter((blog) => blog.author=== 'mario')}/> */}\n    \n    </div>\n    )\n};\n\nexport default Home"],"mappings":";;AACA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,QAAQ,MAAM,YAAY;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEjC,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACf,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACS,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;;EAExC;EACCC,SAAS,CAAC,MAAM;IACb;IACAY,KAAK,CAAC,6BAA6B,CAAC,CAC/BC,IAAI,CAACC,GAAG,IAAI;MACT;MACAC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;MAChB,IAAI,CAACA,GAAG,CAACG,EAAE,EAAE;QACT,MAAMC,KAAK,CAAC,0BAA0B,CAAC;MAC3C;MACA,OAAOJ,GAAG,CAACK,IAAI,EAAE;IACrB,CAAC,CAAC,CACDN,IAAI,CAACO,IAAI,IAAI;MACV;MACAL,OAAO,CAACC,GAAG,CAACI,IAAI,CAAC;MACjBb,QAAQ,CAACa,IAAI,CAAC;MACdX,YAAY,CAAC,KAAK,CAAC;IACvB,CAAC;IACD;IAAA,CACCY,KAAK,CAACC,GAAG,IAAI;MACVX,QAAQ,CAACW,GAAG,CAACC,OAAO,CAAC;IACzB,CAAC,CAAC;EACV,CAAC,CAAC;EAEF,oBACApB,OAAA;IAAKqB,SAAS,EAAC,MAAM;IAAAC,QAAA,GACnBf,KAAK,iBAAIP,OAAA;MAAAsB,QAAA,EAAOf;IAAK;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAQ,EAC7BrB,SAAS,iBAAIL,OAAA;MAAAsB,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAM,eACpC1B,OAAA;MAAAsB,QAAA,EAAI;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,EAEZvB,KAAK,iBAAIH,OAAA,CAACF,QAAQ;MAACK,KAAK,EAAEA,KAAM;MAACwB,KAAK,EAAC;IAAY;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAE;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAIhD;AAEV,CAAC;AAACxB,EAAA,CAzCID,IAAI;AAAA2B,EAAA,GAAJ3B,IAAI;AA2CV,eAAeA,IAAI;AAAA,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}